{"version":3,"sources":["Constants.ts","components/Tile/Tile.tsx","components/Adversary.ts","components/Board/Board.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PieceType","TeamType","VERTICAL_AXIS","HORIZONTAL_AXIS","DIR","BIMAGE","WIMAGE","CIMAGE","arr","Array","fill","image","position","x","y","type","NONE","team","length","BLACK","OPPONENT","WHITE","OUR","CANDIDATE","initialBoardState","Tile","ptype","className","style","backgroundImage","undefined","Adversary","pieces","play","actual","path","dirs","i","this","feasibleMove","push","Math","floor","audio","Audio","src","move","dir","sucessors","utilityGame","rUtility","lastMove","layer","depth","alpha","beta","validMoves","tempUtility","Infinity","copyPieces","require","clone","makeWMove","maxUtility","maxValue","makeBMove","minUtility","minValue","candidateMoves","Board","machine","useState","setPieces","boardRef","useRef","rboard","j","piece","onMouseDown","e","element","target","board","current","classList","contains","grabX","clientX","offsetLeft","grabY","abs","ceil","clientY","offsetTop","index","_","updatedPieces","iaMove","alphaBeta","setTimeout","dropPiece","id","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01d96e3d.chunk.js","sourcesContent":["export const VERTICAL_AXIS = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nexport const HORIZONTAL_AXIS = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nexport const DIR: number[] = [-9, -8, -7, -1, 1, 7, 8, 9];\n\nexport const GRID_SIZE = 100;\n\nexport const BIMAGE = \"assets/images/bpiece.png\";\nexport const WIMAGE = \"assets/images/wpiece.png\";\nexport const CIMAGE = `assets/images/cw.png`;\n\nexport const EASY = 6;\n\nexport function samePosition(p1: Position, p2: Position) {\n  return p1.x === p2.x && p1.y === p2.y;\n}\n\nexport interface Position {\n  x: number;\n  y: number;\n}\n\nexport enum PieceType {\n  BLACK,\n  WHITE,\n  CANDIDATE,\n  NONE,\n}\n\nexport enum TeamType {\n  OPPONENT,\n  OUR,\n  NONE,\n}\n\nexport interface Piece {\n  image: string;\n  position: Position;\n  type: PieceType;\n  team: TeamType;\n}\n\nlet arr = new Array<Piece>(64);\n\narr.fill({\n    image: `null`,\n    position: {\n      x: 9,\n      y: 9,\n    },\n    type: PieceType.NONE,\n    team: TeamType.NONE,\n  }\n)\n\narr[3+HORIZONTAL_AXIS.length*3] = {\n  image: BIMAGE,\n  position: {\n    x: 3,\n    y: 3,\n  },\n  type: PieceType.BLACK,\n  team: TeamType.OPPONENT,\n}\n\narr[3+HORIZONTAL_AXIS.length*4] = {\n  image: WIMAGE,\n  position: {\n    x: 3,\n    y: 4,\n  },\n  type: PieceType.WHITE,\n  team: TeamType.OUR,\n}\n\narr[4+HORIZONTAL_AXIS.length*3] = {\n  image: WIMAGE,\n  position: {\n    x: 4,\n    y: 3,\n  },\n  type: PieceType.WHITE,\n  team: TeamType.OUR,\n}\n\narr[4+HORIZONTAL_AXIS.length*4] = {\n  image: BIMAGE,\n  position: {\n    x: 4,\n    y: 4,\n  },\n  type: PieceType.BLACK,\n  team: TeamType.OPPONENT,\n}\n\narr[4+HORIZONTAL_AXIS.length*5] = {\n  image: CIMAGE,\n  position: {\n    x: 4,\n    y: 5,\n  },\n  type: PieceType.CANDIDATE,\n  team: TeamType.NONE,\n}\n\nexport const initialBoardState: Array<Piece> = arr;","import \"./Tile.css\";\nimport{\n  PieceType,\n}from \"../../Constants\";\n\ninterface Props {\n  image?: string;\n  ptype: PieceType;\n}\n\nexport default function Tile({ ptype, image }: Props) {\n  if(ptype === PieceType.BLACK) {\n    return (\n      <div className=\"tile\">\n        {image && <div style={{backgroundImage: `url(${image})`}} className=\"piece\"></div>}\n      </div>\n    );\n  }else if(ptype === PieceType.WHITE){\n    return (\n      <div className=\"tile\">\n        {image && <div style={{backgroundImage: `url(${image})`}} className=\"piece\"></div>}\n      </div>\n    );\n  }else if(ptype === PieceType.CANDIDATE){\n    return(\n      <div className=\"tile\">\n        {image && <div style={{backgroundImage: `url(${image})`}} className=\"candidate\"></div>}\n      </div>\n    );\n  }else{\n    return (\n        <div className=\"tile\">\n          <div style={{backgroundImage: `url(${undefined})`}} className=\"piece\"></div>\n        </div>\n    );\n  }\n}\n","import{\n    BIMAGE,\n    WIMAGE,\n    DIR,\n    HORIZONTAL_AXIS,\n    PieceType,\n    TeamType,\n    Piece,\n}from \"../Constants\";\n\n\n  export default class Adversary{\n  \n    makeWMove(pieces: Piece[], play: number, actual: boolean){\n      let dirs = [];\n      let path;\n    \n      for(let i = 0; i < DIR.length; i++){\n        if(this.feasibleMove(pieces, play, DIR[i], TeamType.OUR)){\n          dirs.push(DIR[i]);\n        }\n      }\n\n      pieces[play] = {\n        image: WIMAGE,\n        position: {\n          x: (play%HORIZONTAL_AXIS.length),\n          y: Math.floor(play/HORIZONTAL_AXIS.length),\n        },\n        type: PieceType.WHITE,\n        team: TeamType.OUR,\n      }\n\n      for(let i=0; i<dirs.length; i++){\n    \n        path = play + dirs[i];\n    \n        while(pieces[path].team===TeamType.OPPONENT){\n    \n          pieces[path] = {\n            image: WIMAGE,\n            position: {\n              x: (path%HORIZONTAL_AXIS.length),\n              y: Math.floor(path/HORIZONTAL_AXIS.length),\n            },\n            type: PieceType.WHITE,\n            team: TeamType.OUR,\n          }\n          path = path + dirs[i];\n        }\n      }\n\n      if(actual){\n        var audio = new Audio();\n        if(dirs.length < 3){\n          audio.src = \"assets/sound/put_piece.wav\";\n          audio.play();\n        }else{\n          audio.src = \"assets/sound/go_go.ogg\";\n          audio.play();\n        }\n      }\n      return pieces;\n    }\n\n\n\n    makeBMove(pieces: Piece[], play: number, actual :boolean){\n      let dirs: number[] = [];\n      let path;\n    \n      for(let i = 0; i < DIR.length; i++){\n        if(this.feasibleMove(pieces, play, DIR[i], TeamType.OPPONENT)){\n          dirs.push(DIR[i]);\n        }\n      }\n\n      pieces[play] = {\n        image: BIMAGE,\n        position: {\n          x: (play%HORIZONTAL_AXIS.length),\n          y: Math.floor(play/HORIZONTAL_AXIS.length),\n        },\n        type: PieceType.BLACK,\n        team: TeamType.OPPONENT,\n      }\n    \n      for(let i=0; i < dirs.length; i++){\n    \n        path = play + dirs[i];\n    \n        while(pieces[path].team === TeamType.OUR){\n    \n          pieces[path] = {\n            image: BIMAGE,\n            position: {\n              x: (path%HORIZONTAL_AXIS.length),\n              y: Math.floor(path/HORIZONTAL_AXIS.length),\n            },\n            type: PieceType.BLACK,\n            team: TeamType.OPPONENT,\n          }\n          path = path + dirs[i];\n        }\n      }\n\n\n      if(actual){\n        var audio = new Audio();\n        if(dirs.length < 3){\n          audio.src = \"assets/sound/put_piece.wav\";\n          audio.play();\n        }else{\n          audio.src = \"assets/sound/look_out.ogg\";\n          audio.play();\n        }\n      }\n      return pieces;\n    }\n\n    feasibleMove(pieces: Piece[], move: number, dir:number, team: TeamType){\n      \n      let path = move + dir;\n  \n      if((path >= 0)&&(path < pieces.length)){\n        //Not allowed to go through walls.\n        if(((path%8 === 0)&&((path-dir)%8 === 7))||\n          ((path%8 === 7)&&((path-dir)%8 === 0))){\n          return false;\n        }\n\n        while((pieces[path].team!==TeamType.NONE)&&\n          (pieces[path].team!==team)){\n\n          path = path + dir;\n\n          if((path >= 0)&&(path < pieces.length)){\n            //No, you're not allowed to go through walls.\n            if(((path%8 === 0)&&((path-dir)%8 === 7))||\n              ((path%8 === 7)&&((path-dir)%8 === 0))){\n              return false;\n            }\n\n            if(pieces[path].team === team){\n              return true;\n            }\n          }else{\n            break;\n          }\n        }\n      }\n      return false;\n    }\n\n    validMoves(pieces: Piece[], team: TeamType, actual: boolean){\n      let sucessors: number[] = [];\n    \n      for(let move = 0; move < pieces.length; move++){\n\n        if(pieces[move].team === TeamType.NONE){\n\n          for(let i = 0; i < DIR.length; i++){\n\n            if(this.feasibleMove(pieces, move, DIR[i], team)){\n\n              sucessors.push(move);\n              i = DIR.length;\n            }\n          }\n        }\n      }\n\n      if(actual && (sucessors.length===0)){\n        let audio = new Audio();\n        if(this.utilityGame(pieces)>0){\n          audio.src = \"assets/sound/over_lose.ogg\";\n          audio.play();\n        }else{\n          audio.src = \"assets/sound/you_win.ogg\";\n          audio.play();\n        }\n      }\n      return sucessors;\n    }\n\n    utilityGame(pieces: Piece[]){\n\n      let rUtility: number = 0;\n\n      for(let i = 0; i < pieces.length; i++){\n        if(pieces[i].team === TeamType.OPPONENT){\n\n          rUtility++;\n        }else if(pieces[i].team === TeamType.OUR){\n          rUtility--;\n        }\n      }\n      return rUtility;\n    }\n\n    minValue(\n      pieces: Piece[], lastMove:number,\n      layer:number, depth:number,\n      alpha: number, beta: number){\n\n      if(depth <= layer){\n        return [this.utilityGame(pieces), lastMove];\n      }\n\n      let sucessors = this.validMoves(pieces, TeamType.OUR, false);\n\n      let tempUtility = [Infinity, lastMove];\n\n      for(let i = 0; i < sucessors.length; i++){\n\n        const _ = require('lodash');\n        let copyPieces = _.clone(pieces, true);\n\n        copyPieces = this.makeWMove(copyPieces, sucessors[i], false);\n\n        let maxUtility = this.maxValue(\n          copyPieces, sucessors[i], layer+1, depth, alpha, beta\n        );\n\n        if(tempUtility[0] > maxUtility[0]){\n\n          tempUtility = maxUtility;\n        }\n\n        if(tempUtility[0] <= alpha){\n          return tempUtility\n        }\n\n        if(tempUtility[0] < beta){\n          beta = tempUtility[0];\n        }\n        copyPieces = null;\n      }\n      return tempUtility;\n    }\n\n\n    maxValue(\n      pieces: Piece[], lastMove:number,\n      layer:number, depth:number,\n      alpha: number, beta: number){\n\n      if(depth <= layer){\n        return [this.utilityGame(pieces), lastMove];\n      }\n\n      let sucessors = this.validMoves(pieces, TeamType.OPPONENT, false);\n\n      let tempUtility = [-Infinity, 1];\n\n      if(layer === 0){\n        tempUtility[1] = sucessors[0];\n      }\n\n      for(let i = 0; i < sucessors.length; i++){\n        \n        const _ = require('lodash');\n        let copyPieces = _.clone(pieces, true);\n\n        copyPieces = this.makeBMove(copyPieces, sucessors[i], false);\n\n        let minUtility = this.minValue(\n          copyPieces, sucessors[i], layer+1, depth, alpha, beta\n        );\n\n        if(tempUtility[0] < minUtility[0]){\n          tempUtility[0] = minUtility[0];\n          if(layer === 0){\n            tempUtility[1] = sucessors[i];\n          }\n        }\n\n        if(tempUtility[0] >= beta){\n          return tempUtility;\n        }\n\n        if(tempUtility[0] > alpha){\n          alpha = tempUtility[0];\n        }\n\n        copyPieces = null;\n      }\n      return tempUtility;\n    }\n\n    alphaBeta(pieces: Piece[], depth: number ){\n      let utilityMove: number[],\n       alpha: number, beta: number;\n\n      alpha = -Infinity;\n      beta = Infinity;\n\n      utilityMove = this.maxValue(pieces, 0, 0,\n         depth, alpha, beta);\n\n      return utilityMove[1];\n    }\n  }","import { useRef, useState } from \"react\";\nimport \"./Board.css\";\nimport Tile from \"../Tile/Tile\";\nimport Adversary from \"../Adversary\";\n\nimport {\n  VERTICAL_AXIS,\n  HORIZONTAL_AXIS,\n  GRID_SIZE,\n  CIMAGE,\n  EASY,\n  Piece,\n  PieceType,\n  initialBoardState,\n  TeamType,\n} from \"../../Constants\";\n\nlet candidateMoves: number[] = [];\n\n\nexport default function Board(){  \n  const machine = new Adversary();\n\n  const [pieces, setPieces] = useState<Piece[]>(initialBoardState);\n  const boardRef = useRef<HTMLDivElement>(null);\n\n  if(candidateMoves.length === 0){\n\n    candidateMoves = machine.validMoves(pieces, TeamType.OUR, true);\n  \n    for(let i = 0 ; i < candidateMoves.length ; i++){\n      pieces[candidateMoves[i]] = {\n        image: CIMAGE,\n        position: {\n          x: (candidateMoves[i]%HORIZONTAL_AXIS.length),\n          y: Math.floor(candidateMoves[i]/HORIZONTAL_AXIS.length),\n        },\n        type: PieceType.CANDIDATE,\n        team: TeamType.NONE,\n      }\n    }\n  }\n\n  function dropPiece(e: React.MouseEvent){\n\n    const element = e.target as HTMLElement;\n    const board = boardRef.current;\n\n    if(element.classList.contains(\"candidate\") && board){\n      const grabX = Math.floor((e.clientX - board.offsetLeft) / GRID_SIZE);\n      const grabY = Math.abs(Math.ceil((e.clientY - board.offsetTop - 800) / GRID_SIZE));\n\n      const index: number = (grabX + HORIZONTAL_AXIS.length * grabY)\n\n      for(let i = 0; i < candidateMoves.length; i++){\n        pieces[candidateMoves[i]].type = PieceType.NONE;\n      }\n\n      const _ = require('lodash');\n      let updatedPieces = _.clone(pieces, true);\n\n      updatedPieces = machine.makeWMove(updatedPieces, index, true);\n\n      setPieces(updatedPieces);\n\n      updatedPieces = _.clone(updatedPieces, true);\n\n      let iaMove = machine.alphaBeta(updatedPieces, EASY);\n\n      setTimeout(()=>{updatedPieces = machine.makeBMove(updatedPieces, iaMove, true)}, 999);\n      setTimeout(()=>{candidateMoves.length=0;\n        setPieces(updatedPieces)}, 1111);\n    } \n  }\n\n  let rboard = [];\n\n  for(let j = VERTICAL_AXIS.length - 1; j >= 0; j--){\n    for(let i = 0; i < HORIZONTAL_AXIS.length; i++){\n\n      const number = j*HORIZONTAL_AXIS.length+i;\n\n      const piece = pieces[number];\n\n      let image = piece ? piece.image : undefined;\n\n      let ptype = piece ? piece.type : PieceType.NONE;\n\n      rboard.push(<Tile key={`${i},${j}`} image={image} ptype={ptype} />);\n    }\n  }\n\n  return (\n    <div\n      onMouseDown={(e) => dropPiece(e)}\n      id=\"board\"\n      ref={boardRef}\n    >\n      {rboard}\n    </div>\n  );\n}","import './App.css'\nimport Board from './components/Board/Board';\n\nfunction App() {\n  return (\n    <div id=\"App\">\n      <Board/>\n    </div>\n  );\n}\nexport default App;\n\n\n\n\n\n/*import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n*/","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}